version: '3.9'
services:
  database:
    image: mongo:${MONGO_VERSION}
    entrypoint: [ "/usr/bin/mongod", "--keyFile", "/run/secrets/mongo-keyfile", "--replSet", "${REPLICASET_NAME}", "--dbpath", "/data/db", "--bind_ip", "0.0.0.0"]
    secrets:
      - source: mongo-keyfile
        mode: 0400
    configs:
      - mongo-healthcheck
    volumes:
      - mongodata:/data/db:rw
      - mongoconfigdb:/data/configdb:rw
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "sh /mongo-healthcheck"]
      interval: 1m
      timeout: 15s
      retries: 3
      start_period: 10s
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 1m30s
        monitor: 15s

  dbcontroller:
    image: jackietreehorn/mongo-replica-ctrl:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      OVERLAY_NETWORK_NAME: ${BACKEND_NETWORK_NAME}
      MONGO_SERVICE_NAME: ${MONGO_SERVICE_URI}
      REPLICASET_NAME: ${REPLICASET_NAME}
      MONGO_PORT: 27017
      MONGO_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      INITDB_DATABASE: ${INITDB_DATABASE}
      INITDB_USER: ${INITDB_USER}
      INITDB_PASSWORD: ${INITDB_PASSWORD}
      DEBUG: 1
    entrypoint: python /src/db-replica_ctrl.py
    networks:
      - backend
    depends_on:
      - database
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 1m
        monitor: 10s

  nosqlclient:
    image: mongoclient/mongoclient:latest
    environment:
      - MONGOCLIENT_DEFAULT_CONNECTION_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@database:27017/?replicaSet=${REPLICASET_NAME}
    depends_on:
      - database
    ports:
      - "${NOSQLCLIENT_PORT:-3030}:3000"
    networks:
        - backend
    deploy:
      mode: replicated
      restart_policy:
        condition: on-failure
      replicas: 1
      placement:
        constraints: [node.role==manager]
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        delay: 1m
        monitor: 15s

configs:
  mongo-healthcheck:
    file: mongo-healthcheck

secrets:
   mongo-keyfile:
     external: true

volumes:
  # NOTE: Must use 'external' for db volumes so they're not recreated during redeployments
  mongodata:
    external: true
    name: ${STACK_NAME}_mongodata
  mongoconfigdb:
    external: true
    name: ${STACK_NAME}_mongoconfigdb

networks:
  backend:
    name: ${BACKEND_NETWORK_NAME}
    external: true
